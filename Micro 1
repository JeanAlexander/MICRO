#include <18F4550.h>
#device adc=10
#fuses XT,NOWDT,NOMCLR
#use delay(crystal=4000000)
#include <math.h>
#define use_portd_lcd TRUE
#include <lcd.c>

#define BTN_INC_SPEED PIN_B0
#define BTN_DEC_SPEED PIN_B1
#define BTN_START_STOP PIN_B2
#BYTE PORTB = 0XF83
#BYTE TRISB = 0XF95
#use rs232(baud=9600, stop=1, parity=N, xmit=PIN_C6, rcv=PIN_C7, bits=8)
int8 pwm_duty_cycle = 0;
int1 is_bomba_on = 0;

void enviar_sensor1()
{
   int16 sensor1;

   set_adc_channel (6);//Lectura Vout del potenciometro en PIN AN6
   delay_us(10);
   sensor1 = read_adc();// lectura del valor

   printf("SEN01%04lu\r\n",sensor1);
}
void init_pwm() {
    setup_ccp1(CCP_PWM);
    setup_timer_2(T2_DIV_BY_16, 255, 1);
    set_pwm1_duty(pwm_duty_cycle);
}

void update_pwm() {
    set_pwm1_duty(pwm_duty_cycle);
}

void main() {
TRISB = 0XFF;
    float tv;
    float vol;
    int16 value;
    float humedad;
    
    TRISB = 0xFF; // Configurar todos los pines del puerto B como entradas
    port_b_pullups(TRUE); // Activar resistencias de pull-up en el puerto B
    
    lcd_init();
    setup_port_a(ALL_ANALOG);
    setup_adc(ADC_CLOCK_INTERNAL);
    set_adc_channel(6);
    init_pwm();
    
    lcd_gotoxy(1,1);
    printf(lcd_putc, "Buenos dias");
    lcd_gotoxy(1,2);
    printf(lcd_putc, "GRUPO 22");
    delay_ms(2000);  // Delay para mostrar el mensaje de bienvenida
    
    lcd_gotoxy(1,1);
    printf(lcd_putc, "                 "); // Borrar el mensaje de bienvenida
    lcd_gotoxy(1,1);
    
    while(TRUE) {
      
        delay_us(10);
        value = Read_ADC();
        tv = 100 * 5.0 * value / 1023.0;
        vol = (tv/100);
        humedad = (100*(5-vol)/5);
        
        lcd_gotoxy(1,1);
        printf(lcd_putc, "H = %04.2f%% ",humedad);
        
        lcd_gotoxy(1,2);
        printf(lcd_putc, "B: %s ", is_bomba_on ? "ON_" : "OFF");
        lcd_gotoxy(7,2);
        printf(lcd_putc, "PWM: %u", pwm_duty_cycle);
        if (vol<3) {
            delay_ms(1);
            if (vol<3) { 
                lcd_gotoxy(15,1);
                printf(lcd_putc, "1");
                if (true) {
                    pwm_duty_cycle = 000;
                    lcd_gotoxy(3,2);
                     printf(lcd_putc, "OFF");
                    update_pwm();
                }
            }
        } 
        if (vol>3) {
            delay_ms(1);
            if (vol>3) { 
                lcd_gotoxy(15,1);
                printf(lcd_putc, "2");
                if (true) {
                    pwm_duty_cycle = 250;
                    lcd_gotoxy(3,2);
                     printf(lcd_putc, "ON_");
                    update_pwm();
                }
            }
        }
      setup_adc(ADC_CLOCK_INTERNAL);
      enviar_sensor1();
      delay_ms(50);
        
    }
}
